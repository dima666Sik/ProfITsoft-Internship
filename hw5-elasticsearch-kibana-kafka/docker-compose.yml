version: "3.9"
services:
  elasticsearch:
    healthcheck:
      interval: 10s
      retries: 80
      test: ["CMD-SHELL", "curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/"]
    image: elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ingest.geoip.downloader.enabled=false
    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    labels:
      co.elastic.metrics/module: "elasticsearch"
      co.elastic.metrics/hosts: "http://elasticsearch:9200"
  kibana:
    image: kibana:8.6.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: dimasik666
      POSTGRES_PASSWORD: password
      POSTGRES_DB: space_db
    ports:
      - "5443:5432"
    restart: unless-stopped

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  email-sender-service:
    build:
      context: .
      dockerfile: email-sender-service/Dockerfile
    restart: on-failure
    ports:
      - "8081:8081"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - elasticsearch.address=elasticsearch:9200
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  space-info-service:
    build:
      context: .
      dockerfile: space-info-service/Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - zookeeper
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/space_db
      - SPRING_DATASOURCE_USERNAME=dimasik666
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_LIQUIBASE_ENABLED=true

volumes:
  postgres_data:
